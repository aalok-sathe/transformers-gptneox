import json
import os

import shared.utils
import shared.model_setup as shared_model_setup


def test_wic_tokenization():
    os.environ["BERT_ALL_DIR"] = "/home/zphang/nyu/bowman/code/pytorch-pretrained-BERT/cache/bert_metadata"
    tokenizer = shared_model_setup.create_tokenizer(
        bert_model_name="bert-base-uncased",
        bert_load_mode="model_only",
        do_lower_case=True,
        bert_vocab_path=None,
    )

    pdl, eel = _wic_helper("/home/zphang/data/bowman/superglue/WiC/train.jsonl", tokenizer, "sentence1")
    assert check_lists_equal(
        pdl,
        [162, 337, 439, 835, 871, 1297, 1456, 1556, 1845, 1912, 1990, 2102, 2116, 2142, 2264, 2343,
         2477, 3153, 3186, 3400, 4158, 4325, 4459, 4577, 4694, 4823, 5193, 5204, 5404],
    )
    assert check_lists_equal(eel, [5110])
    pdl, eel = _wic_helper("/home/zphang/data/bowman/superglue/WiC/train.jsonl", tokenizer, "sentence2")
    assert check_lists_equal(
        pdl,
        [0, 2, 3, 6, 7, 8, 10, 12, 15, 17, 23, 26, 27, 31, 34,
         36, 39, 44, 46, 48, 52, 57, 58, 60, 66, 71, 75, 79, 80, 85,
         89, 91, 97, 99, 102, 104, 109, 115, 122, 123, 126, 128, 129, 130, 132,
         133, 134, 146, 149, 151, 153, 155, 157, 160, 162, 163, 168, 170, 171, 173,
         174, 175, 177, 179, 180, 183, 184, 188, 190, 192, 194, 199, 200, 209, 211,
         213, 215, 216, 223, 225, 228, 231, 233, 234, 235, 239, 242, 247, 248, 258,
         261, 262, 265, 270, 272, 278, 281, 284, 285, 286, 287, 288, 290, 293, 294,
         295, 297, 298, 300, 301, 302, 303, 306, 309, 310, 311, 317, 325, 332, 336,
         340, 342, 343, 346, 350, 352, 353, 354, 359, 360, 363, 365, 368, 375, 384,
         390, 393, 395, 396, 398, 400, 402, 404, 405, 407, 409, 413, 415, 417, 430,
         431, 434, 435, 438, 439, 440, 441, 442, 449, 454, 456, 462, 464, 465, 466,
         472, 480, 481, 484, 487, 489, 490, 494, 497, 499, 500, 504, 505, 506, 507,
         508, 510, 511, 513, 517, 518, 519, 520, 521, 523, 537, 540, 543, 545, 549,
         550, 552, 554, 555, 556, 557, 564, 571, 572, 573, 575, 582, 595, 596, 598,
         606, 607, 608, 609, 610, 611, 613, 615, 618, 619, 620, 626, 631, 633, 635,
         637, 640, 642, 644, 645, 647, 650, 655, 660, 665, 668, 672, 673, 677, 679,
         681, 682, 683, 684, 688, 689, 690, 691, 693, 694, 695, 696, 698, 699, 701,
         705, 711, 715, 716, 719, 720, 723, 729, 733, 734, 736, 739, 741, 744, 745,
         747, 749, 750, 753, 758, 760, 763, 765, 766, 769, 774, 777, 779, 780, 783,
         786, 789, 797, 803, 807, 813, 815, 817, 818, 825, 828, 829, 831, 838, 842,
         843, 845, 846, 848, 849, 851, 861, 865, 866, 867, 868, 869, 870, 871, 875,
         881, 886, 887, 891, 893, 898, 901, 902, 905, 907, 908, 910, 911, 914, 918,
         919, 921, 926, 927, 928, 933, 935, 937, 939, 941, 942, 952, 955, 958, 959,
         963, 969, 970, 972, 973, 983, 985, 987, 988, 991, 992, 993, 994, 997, 1000,
         1001, 1009, 1016, 1017, 1019, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1034, 1036, 1044,
         1045, 1048, 1049, 1058, 1062, 1066, 1067, 1069, 1070, 1071, 1072, 1073, 1081, 1083, 1086,
         1087, 1089, 1091, 1093, 1094, 1099, 1101, 1102, 1106, 1107, 1108, 1110, 1112, 1113, 1117,
         1120, 1121, 1124, 1127, 1128, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1146, 1149, 1150,
         1151, 1152, 1158, 1160, 1164, 1166, 1168, 1169, 1170, 1176, 1177, 1180, 1188, 1191, 1192,
         1193, 1196, 1198, 1199, 1200, 1210, 1213, 1222, 1223, 1226, 1228, 1230, 1235, 1236, 1237,
         1238, 1248, 1250, 1255, 1256, 1258, 1259, 1261, 1262, 1263, 1264, 1265, 1271, 1277, 1280,
         1281, 1298, 1299, 1301, 1302, 1308, 1310, 1319, 1320, 1323, 1327, 1330, 1336, 1340, 1342,
         1345, 1346, 1347, 1349, 1352, 1353, 1363, 1373, 1380, 1383, 1386, 1388, 1394, 1395, 1396,
         1402, 1403, 1404, 1410, 1412, 1413, 1416, 1417, 1420, 1421, 1423, 1427, 1428, 1430, 1431,
         1435, 1438, 1441, 1443, 1447, 1450, 1451, 1453, 1454, 1462, 1475, 1477, 1479, 1481, 1498,
         1500, 1502, 1503, 1504, 1506, 1507, 1510, 1511, 1513, 1515, 1518, 1521, 1522, 1523, 1526,
         1529, 1530, 1532, 1534, 1536, 1537, 1542, 1544, 1545, 1547, 1553, 1557, 1558, 1559, 1560,
         1563, 1564, 1565, 1568, 1570, 1573, 1574, 1578, 1580, 1581, 1582, 1586, 1587, 1589, 1598,
         1600, 1606, 1611, 1615, 1618, 1622, 1623, 1626, 1627, 1631, 1632, 1640, 1642, 1654, 1663,
         1670, 1671, 1676, 1677, 1678, 1681, 1683, 1685, 1687, 1693, 1695, 1696, 1701, 1710, 1711,
         1716, 1718, 1721, 1723, 1725, 1732, 1735, 1736, 1741, 1743, 1745, 1746, 1749, 1750, 1752,
         1754, 1756, 1761, 1762, 1763, 1766, 1779, 1784, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
         1801, 1804, 1805, 1818, 1819, 1820, 1825, 1826, 1829, 1832, 1833, 1834, 1845, 1846, 1848,
         1849, 1850, 1851, 1852, 1854, 1856, 1857, 1859, 1860, 1863, 1865, 1866, 1868, 1869, 1874,
         1875, 1882, 1884, 1889, 1890, 1895, 1897, 1898, 1900, 1901, 1903, 1908, 1910, 1913, 1915,
         1918, 1923, 1925, 1927, 1929, 1931, 1932, 1933, 1934, 1935, 1938, 1939, 1943, 1945, 1954,
         1959, 1962, 1963, 1965, 1967, 1968, 1971, 1973, 1974, 1976, 1986, 1988, 1990, 1991, 1992,
         1993, 1998, 1999, 2001, 2005, 2006, 2008, 2017, 2018, 2021, 2024, 2025, 2026, 2031, 2033,
         2034, 2035, 2037, 2043, 2044, 2045, 2052, 2056, 2057, 2058, 2062, 2065, 2066, 2067, 2069,
         2071, 2074, 2075, 2078, 2080, 2087, 2088, 2096, 2099, 2102, 2107, 2113, 2116, 2121, 2129,
         2130, 2132, 2133, 2134, 2135, 2140, 2143, 2149, 2151, 2157, 2158, 2159, 2161, 2162, 2164,
         2168, 2169, 2176, 2179, 2181, 2183, 2185, 2186, 2188, 2190, 2192, 2193, 2194, 2201, 2211,
         2214, 2215, 2216, 2218, 2220, 2226, 2227, 2231, 2232, 2235, 2237, 2238, 2240, 2243, 2244,
         2251, 2261, 2263, 2265, 2269, 2273, 2275, 2278, 2281, 2282, 2283, 2285, 2286, 2287, 2291,
         2292, 2298, 2302, 2303, 2316, 2318, 2319, 2321, 2322, 2323, 2324, 2325, 2328, 2332, 2333,
         2336, 2339, 2346, 2349, 2351, 2352, 2357, 2369, 2374, 2379, 2381, 2384, 2385, 2386, 2391,
         2399, 2404, 2407, 2411, 2416, 2417, 2419, 2421, 2425, 2430, 2434, 2443, 2445, 2446, 2447,
         2448, 2450, 2451, 2452, 2453, 2454, 2456, 2457, 2462, 2463, 2467, 2469, 2472, 2473, 2474,
         2476, 2477, 2479, 2483, 2485, 2486, 2492, 2496, 2499, 2501, 2502, 2503, 2505, 2507, 2511,
         2516, 2519, 2520, 2524, 2527, 2529, 2532, 2542, 2550, 2559, 2562, 2564, 2567, 2568, 2570,
         2572, 2573, 2578, 2582, 2592, 2593, 2594, 2596, 2601, 2603, 2604, 2608, 2609, 2610, 2620,
         2626, 2627, 2631, 2632, 2636, 2642, 2644, 2649, 2652, 2654, 2657, 2660, 2668, 2670, 2673,
         2681, 2685, 2689, 2695, 2697, 2699, 2701, 2703, 2707, 2722, 2723, 2724, 2728, 2729, 2732,
         2738, 2739, 2741, 2742, 2744, 2745, 2746, 2749, 2763, 2764, 2766, 2769, 2770, 2772, 2780,
         2782, 2784, 2791, 2793, 2802, 2805, 2806, 2812, 2813, 2814, 2817, 2818, 2820, 2823, 2834,
         2837, 2838, 2843, 2844, 2846, 2847, 2848, 2849, 2856, 2867, 2868, 2869, 2872, 2874, 2875,
         2878, 2879, 2881, 2885, 2892, 2898, 2901, 2904, 2905, 2907, 2908, 2909, 2911, 2914, 2915,
         2919, 2920, 2921, 2923, 2924, 2926, 2936, 2939, 2940, 2943, 2945, 2946, 2947, 2948, 2950,
         2951, 2959, 2966, 2967, 2968, 2973, 2976, 2977, 2979, 2982, 2986, 2987, 2988, 2990, 2995,
         2996, 2997, 3001, 3004, 3011, 3012, 3013, 3016, 3017, 3019, 3023, 3030, 3032, 3041, 3043,
         3048, 3053, 3055, 3056, 3065, 3066, 3068, 3070, 3073, 3074, 3081, 3086, 3088, 3090, 3093,
         3095, 3096, 3097, 3098, 3101, 3106, 3112, 3115, 3116, 3118, 3119, 3123, 3126, 3129, 3130,
         3134, 3135, 3136, 3138, 3147, 3149, 3153, 3156, 3158, 3161, 3162, 3165, 3166, 3167, 3169,
         3170, 3186, 3188, 3190, 3191, 3192, 3197, 3198, 3202, 3204, 3205, 3211, 3212, 3215, 3222,
         3223, 3226, 3229, 3235, 3236, 3237, 3238, 3242, 3243, 3244, 3253, 3256, 3263, 3267, 3274,
         3276, 3278, 3279, 3280, 3282, 3283, 3284, 3286, 3289, 3292, 3295, 3297, 3298, 3301, 3302,
         3304, 3308, 3313, 3316, 3317, 3320, 3323, 3328, 3330, 3332, 3339, 3341, 3342, 3346, 3353,
         3356, 3358, 3360, 3362, 3363, 3367, 3370, 3371, 3373, 3377, 3379, 3380, 3385, 3386, 3387,
         3393, 3395, 3397, 3399, 3415, 3416, 3420, 3428, 3430, 3435, 3436, 3443, 3444, 3445, 3451,
         3453, 3454, 3455, 3459, 3463, 3467, 3473, 3476, 3477, 3480, 3485, 3486, 3490, 3492, 3493,
         3499, 3500, 3501, 3504, 3509, 3513, 3514, 3515, 3516, 3518, 3519, 3520, 3521, 3522, 3523,
         3524, 3525, 3527, 3531, 3532, 3536, 3539, 3540, 3544, 3547, 3552, 3554, 3557, 3559, 3562,
         3563, 3566, 3570, 3571, 3577, 3579, 3584, 3587, 3592, 3593, 3607, 3608, 3611, 3612, 3613,
         3615, 3616, 3618, 3624, 3630, 3631, 3632, 3633, 3639, 3640, 3643, 3645, 3648, 3649, 3654,
         3662, 3664, 3665, 3669, 3672, 3673, 3675, 3676, 3677, 3678, 3680, 3682, 3684, 3687, 3692,
         3694, 3696, 3697, 3699, 3703, 3705, 3713, 3723, 3724, 3725, 3726, 3729, 3732, 3734, 3736,
         3739, 3745, 3753, 3758, 3766, 3767, 3769, 3770, 3772, 3775, 3783, 3791, 3792, 3793, 3801,
         3802, 3806, 3807, 3811, 3812, 3813, 3816, 3825, 3828, 3829, 3831, 3832, 3833, 3834, 3839,
         3846, 3848, 3852, 3853, 3854, 3855, 3861, 3863, 3864, 3870, 3871, 3873, 3875, 3876, 3877,
         3878, 3880, 3883, 3884, 3886, 3887, 3888, 3889, 3890, 3893, 3894, 3898, 3901, 3904, 3907,
         3909, 3916, 3918, 3927, 3928, 3929, 3931, 3932, 3939, 3942, 3953, 3954, 3955, 3956, 3957,
         3960, 3963, 3966, 3968, 3969, 3974, 3978, 3979, 3980, 3981, 3983, 3986, 3988, 3992, 4011,
         4013, 4014, 4026, 4030, 4032, 4033, 4036, 4037, 4038, 4039, 4041, 4043, 4047, 4052, 4054,
         4056, 4059, 4064, 4067, 4078, 4080, 4084, 4086, 4087, 4089, 4091, 4094, 4095, 4098, 4099,
         4100, 4101, 4106, 4110, 4111, 4114, 4116, 4123, 4124, 4128, 4129, 4134, 4136, 4144, 4146,
         4153, 4156, 4158, 4160, 4163, 4164, 4165, 4171, 4174, 4175, 4176, 4180, 4183, 4186, 4187,
         4190, 4191, 4192, 4198, 4199, 4201, 4204, 4206, 4208, 4210, 4212, 4218, 4221, 4236, 4241,
         4243, 4244, 4246, 4249, 4251, 4255, 4262, 4268, 4271, 4277, 4282, 4284, 4290, 4299, 4302,
         4309, 4319, 4320, 4322, 4328, 4330, 4331, 4334, 4336, 4338, 4346, 4352, 4353, 4359, 4360,
         4364, 4369, 4376, 4378, 4384, 4387, 4390, 4391, 4392, 4394, 4396, 4400, 4406, 4407, 4408,
         4409, 4410, 4413, 4415, 4418, 4421, 4425, 4427, 4429, 4435, 4437, 4438, 4446, 4447, 4448,
         4451, 4452, 4456, 4457, 4459, 4460, 4465, 4466, 4468, 4469, 4471, 4475, 4483, 4486, 4487,
         4489, 4497, 4500, 4501, 4503, 4507, 4510, 4511, 4512, 4514, 4515, 4518, 4525, 4534, 4535,
         4540, 4543, 4547, 4548, 4552, 4553, 4554, 4559, 4561, 4567, 4568, 4571, 4576, 4577, 4586,
         4590, 4595, 4604, 4605, 4607, 4609, 4615, 4616, 4617, 4618, 4626, 4632, 4633, 4634, 4636,
         4637, 4638, 4639, 4642, 4643, 4644, 4645, 4647, 4648, 4650, 4651, 4654, 4655, 4657, 4660,
         4664, 4666, 4670, 4672, 4675, 4676, 4677, 4681, 4683, 4686, 4692, 4703, 4705, 4709, 4715,
         4717, 4718, 4720, 4722, 4723, 4725, 4727, 4729, 4734, 4739, 4741, 4743, 4748, 4755, 4758,
         4761, 4762, 4763, 4765, 4770, 4772, 4775, 4777, 4783, 4784, 4786, 4790, 4795, 4800, 4802,
         4803, 4804, 4807, 4810, 4814, 4816, 4818, 4819, 4821, 4822, 4823, 4824, 4826, 4829, 4831,
         4832, 4834, 4835, 4840, 4845, 4847, 4851, 4852, 4866, 4868, 4869, 4872, 4874, 4877, 4883,
         4891, 4893, 4899, 4902, 4904, 4912, 4920, 4924, 4930, 4943, 4945, 4947, 4948, 4953, 4954,
         4959, 4965, 4970, 4972, 4979, 4980, 4990, 4993, 5000, 5002, 5003, 5004, 5006, 5010, 5016,
         5020, 5024, 5028, 5032, 5034, 5037, 5040, 5041, 5051, 5053, 5054, 5056, 5057, 5059, 5061,
         5062, 5064, 5065, 5068, 5069, 5070, 5071, 5072, 5074, 5075, 5079, 5080, 5087, 5088, 5090,
         5091, 5094, 5097, 5099, 5105, 5109, 5111, 5116, 5117, 5119, 5120, 5127, 5139, 5141, 5147,
         5160, 5165, 5168, 5169, 5170, 5172, 5174, 5175, 5181, 5182, 5184, 5185, 5187, 5188, 5191,
         5194, 5195, 5197, 5200, 5203, 5204, 5205, 5206, 5207, 5208, 5211, 5214, 5216, 5218, 5222,
         5225, 5231, 5236, 5238, 5239, 5241, 5243, 5247, 5249, 5255, 5258, 5259, 5269, 5273, 5276,
         5277, 5278, 5281, 5282, 5288, 5294, 5297, 5298, 5300, 5302, 5303, 5313, 5314, 5317, 5322,
         5323, 5326, 5330, 5338, 5339, 5340, 5342, 5344, 5345, 5349, 5354, 5355, 5356, 5357, 5359,
         5360, 5364, 5365, 5367, 5368, 5369, 5373, 5374, 5377, 5384, 5386, 5387, 5388, 5389, 5390,
         5395, 5405, 5406, 5407, 5411, 5415, 5418])
    assert check_lists_equal(eel, [339])
    pdl, eel = _wic_helper(
        "/home/zphang/data/bowman/superglue/WiC/val.jsonl", tokenizer, "sentence1")
    assert check_lists_equal(pdl, [378, 468, 585])
    assert check_lists_equal(eel, [])
    pdl, eel = _wic_helper(
        "/home/zphang/data/bowman/superglue/WiC/val.jsonl", tokenizer, "sentence2")
    assert check_lists_equal(
        pdl,
        [0, 1, 2, 9, 11, 12, 14, 16, 17, 18, 19, 20, 21, 24, 29,
         34, 39, 42, 44, 45, 49, 50, 58, 63, 66, 67, 69, 71, 72, 73,
         74, 79, 80, 81, 83, 84, 86, 87, 89, 90, 97, 99, 100, 108, 112,
         113, 114, 115, 122, 124, 125, 128, 131, 134, 135, 137, 138, 139, 141, 142,
         143, 144, 146, 153, 157, 159, 162, 165, 167, 171, 172, 177, 178, 183, 184,
         186, 188, 191, 195, 200, 206, 209, 211, 212, 213, 214, 218, 219, 220, 223,
         228, 230, 233, 234, 236, 237, 239, 241, 244, 245, 246, 247, 251, 253, 257,
         260, 261, 264, 266, 267, 272, 273, 276, 285, 286, 288, 290, 291, 292, 293,
         296, 301, 306, 308, 313, 314, 319, 320, 322, 325, 327, 329, 332, 333, 339,
         340, 341, 342, 343, 345, 347, 348, 349, 350, 353, 354, 355, 357, 359, 360,
         361, 366, 367, 368, 370, 373, 374, 378, 380, 385, 388, 389, 391, 394, 395,
         401, 406, 407, 410, 413, 415, 417, 421, 426, 428, 434, 435, 437, 443, 447,
         452, 454, 460, 461, 464, 467, 471, 474, 475, 477, 480, 482, 488, 492, 493,
         496, 505, 508, 510, 511, 514, 515, 516, 517, 518, 519, 520, 523, 525, 528,
         529, 532, 534, 535, 538, 540, 547, 548, 550, 552, 559, 560, 561, 562, 566,
         567, 571, 572, 573, 580, 585, 587, 590, 592, 596, 601, 604, 608, 613, 614,
         620, 621, 624, 625, 627, 630, 632, 633, 636, 637])
    assert check_lists_equal(eel, [])
    pdl, eel = _wic_helper(
        "/home/zphang/data/bowman/superglue/WiC/test.jsonl", tokenizer, "sentence1")
    assert check_lists_equal(pdl, [167, 430, 895, 982])
    assert check_lists_equal(eel, [])
    pdl, eel = _wic_helper(
        "/home/zphang/data/bowman/superglue/WiC/test.jsonl", tokenizer, "sentence2")
    assert check_lists_equal(
        pdl,
        [1, 11, 15, 16, 17, 19, 22, 23, 24, 28, 29, 31, 34, 37, 38,
         43, 51, 58, 61, 62, 65, 67, 68, 71, 74, 84, 85, 88, 90, 94,
         95, 101, 103, 104, 108, 109, 110, 113, 118, 119, 120, 123, 129, 131, 138,
         143, 145, 148, 154, 155, 156, 158, 161, 162, 163, 164, 166, 168, 170, 172,
         175, 176, 179, 181, 183, 185, 186, 188, 192, 194, 197, 202, 203, 206, 207,
         211, 216, 220, 223, 225, 226, 228, 229, 231, 234, 241, 246, 248, 252, 254,
         255, 261, 266, 271, 276, 279, 280, 283, 287, 289, 290, 291, 293, 296, 297,
         298, 305, 306, 307, 308, 312, 319, 324, 330, 331, 332, 334, 340, 343, 351,
         352, 355, 362, 365, 367, 369, 371, 373, 375, 376, 379, 382, 389, 395, 399,
         400, 401, 402, 413, 414, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426,
         431, 432, 435, 436, 438, 444, 451, 452, 455, 456, 459, 460, 462, 464, 467,
         474, 476, 478, 479, 483, 489, 490, 492, 494, 497, 506, 513, 516, 521, 523,
         525, 526, 528, 532, 533, 535, 539, 545, 546, 547, 548, 550, 551, 558, 560,
         565, 566, 569, 570, 574, 575, 577, 584, 586, 589, 597, 599, 600, 601, 603,
         604, 607, 609, 611, 612, 617, 618, 621, 623, 624, 625, 626, 636, 637, 639,
         643, 647, 649, 651, 654, 657, 658, 661, 663, 664, 666, 669, 676, 677, 678,
         680, 682, 683, 687, 688, 690, 691, 692, 694, 697, 699, 700, 702, 703, 706,
         707, 708, 709, 710, 712, 717, 718, 721, 724, 725, 727, 730, 731, 733, 734,
         737, 748, 751, 752, 754, 755, 762, 766, 768, 771, 773, 775, 779, 780, 781,
         784, 786, 789, 790, 794, 797, 800, 801, 802, 806, 815, 817, 818, 819, 820,
         822, 823, 825, 826, 827, 830, 832, 835, 836, 838, 839, 845, 849, 851, 852,
         858, 859, 860, 864, 865, 866, 868, 869, 870, 871, 875, 876, 877, 878, 881,
         882, 883, 885, 887, 892, 895, 898, 899, 900, 902, 905, 912, 920, 924, 931,
         934, 935, 938, 939, 941, 942, 943, 946, 947, 950, 959, 963, 965, 975, 980,
         981, 982, 996, 997, 999, 1001, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1016, 1017,
         1018, 1019, 1027, 1033, 1036, 1037, 1038, 1040, 1042, 1043, 1044, 1053, 1054, 1055, 1057,
         1058, 1063, 1064, 1066, 1069, 1073, 1074, 1078, 1088, 1089, 1096, 1098, 1100, 1102, 1103,
         1110, 1111, 1114, 1119, 1121, 1124, 1128, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137,
         1138, 1141, 1142, 1146, 1147, 1152, 1153, 1161, 1164, 1171, 1173, 1177, 1180, 1181, 1182,
         1184, 1188, 1189, 1190, 1191, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1206, 1207, 1215,
         1221, 1235, 1237, 1238, 1239, 1240, 1241, 1242, 1244, 1245, 1247, 1248, 1249, 1252, 1253,
         1254, 1257, 1259, 1263, 1264, 1268, 1273, 1275, 1277, 1278, 1286, 1287, 1289, 1292, 1294,
         1295, 1298, 1302, 1305, 1306, 1315, 1316, 1320, 1329, 1330, 1331, 1334, 1337, 1338, 1342,
         1343, 1345, 1347, 1349, 1350, 1351, 1352, 1354, 1358, 1359, 1360, 1361, 1364, 1365, 1367,
         1370, 1377, 1378, 1381, 1383, 1384, 1385, 1389, 1395])
    assert check_lists_equal(eel, [])



def _wic_helper(path, tokenizer, key):
    with open(path, encoding='utf-8') as f:
        data = [
            json.loads(line)
            for line in f
        ]
    pos_difference_ls = []
    encoding_error_ls = []
    for i, datum in enumerate(data):
        try:
            text = datum[f"{key}"]
            bert_tokens = tokenizer.tokenize(text)
            result = shared.utils.convert_word_idx_for_bert_tokens(
                text,
                bert_tokens,
                [int(datum[f"{key}_idx"])],
            )[0]
            if datum["word"] != shared.utils.bert_tokens_to_text(
                    bert_tokens[result[0]:result[1]]):
                pos_difference_ls.append(i)
        except AssertionError:
            encoding_error_ls.append(i)
    return pos_difference_ls, encoding_error_ls


def check_lists_equal(ls_a, ls_b):
    if not len(ls_a) == len(ls_b):
        return False
    for a, b in zip(ls_a, ls_b):
        if not a == b:
            return False
    return True
